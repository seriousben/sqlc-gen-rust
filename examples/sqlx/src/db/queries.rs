/// This file is @generated by sqlc-gen-rust.
#[derive(Debug, Clone)]
pub struct GetAuthorInfo {
    id: i64,
}
#[derive(Debug, Clone)]
pub struct GetAuthorRow {
    id: i64,
    name: String,
    bio: Option<String>,
}
async fn get_author(id: i64) -> Result<"GetAuthorRow", Error> {
    let rec = sqlx::query!("SELECT id, name, bio FROM authors WHERE id = $1 LIMIT 1");
}
#[derive(Debug, Clone)]
pub struct ListAuthorsInfo {}
#[derive(Debug, Clone)]
pub struct ListAuthorsRow {
    id: i64,
    name: String,
    bio: Option<String>,
}
async fn list_authors() -> Result<"ListAuthorsRow", Error> {
    let rec = sqlx::query!("SELECT id, name, bio FROM authors ORDER BY name");
}
#[derive(Debug, Clone)]
pub struct CreateAuthorInfo {
    name: String,
    bio: Option<String>,
}
#[derive(Debug, Clone)]
pub struct CreateAuthorRow {
    id: i64,
    name: String,
    bio: Option<String>,
}
async fn create_author(
    name: String,
    bio: Option<String>,
) -> Result<"CreateAuthorRow", Error> {
    let rec = sqlx::query!(
        "INSERT INTO authors (  name, bio ) VALUES (  $1, $2 ) RETURNING id, name, bio"
    );
}
#[derive(Debug, Clone)]
pub struct DeleteAuthorInfo {
    id: i64,
}
#[derive(Debug, Clone)]
pub struct DeleteAuthorRow {}
async fn delete_author(id: i64) -> Result<"DeleteAuthorRow", Error> {
    let rec = sqlx::query!("DELETE FROM authors WHERE id = $1");
}
