/// This file is @generated by sqlc-gen-rust.
#[derive(Debug, Clone)]
pub struct CreateCommentInfo {
    user_id: uuid::Uuid,
    post_id: uuid::Uuid,
    content: String,
}
#[derive(Debug, Clone)]
pub struct CreateCommentRow {
    comment_id: uuid::Uuid,
    username: String,
    content: String,
    created_at: chrono::DateTime<chrono::Utc>,
}
async fn create_comment(
    create_comment_info: CreateCommentInfo,
) -> Result<CreateCommentRow, Box<dyn std::error::Error>> {
    let rec = sqlx::query!(
        "
with inserted_comment as (
    insert into comment(user_id, post_id, content)
    values ($1, $2, $3)
    returning comment_id, user_id, content, created_at
)
select comment_id, username, content, created_at
from inserted_comment
inner join \"user\" using (user_id)
"
    );
    Err(Box::new(std::io::Error::new(std::io::ErrorKind::Other, "not implemented")))
}
#[derive(Debug, Clone)]
pub struct GetCommentsRow {
    comment_id: uuid::Uuid,
    username: String,
    content: String,
    created_at: chrono::DateTime<chrono::Utc>,
}
async fn get_comments(
    post_id: uuid::Uuid,
) -> Result<Vec<GetCommentsRow>, Box<dyn std::error::Error>> {
    let rec = sqlx::query!(
        "
select comment_id, username, content, created_at
from comment
inner join \"user\" using (user_id)
where post_id = $1
order by created_at
"
    );
    Err(Box::new(std::io::Error::new(std::io::ErrorKind::Other, "not implemented")))
}
#[derive(Debug, Clone)]
pub struct CreateUserRow {}
async fn create_user(
    username: String,
    password_hash: String,
) -> Result<CreateUserRow, Box<dyn std::error::Error>> {
    let rec = sqlx::query!(
        "
insert into \"user\"(username, password_hash)
values ($1, $2)
"
    );
    Err(Box::new(std::io::Error::new(std::io::ErrorKind::Other, "not implemented")))
}
#[derive(Debug, Clone)]
pub struct GetUserByUsernameRow {
    user_id: uuid::Uuid,
    password_hash: String,
}
async fn get_user_by_username(
    username: String,
) -> Result<GetUserByUsernameRow, Box<dyn std::error::Error>> {
    let rec = sqlx::query!(
        "
select user_id, password_hash from \"user\" where username = $1
"
    );
    Err(Box::new(std::io::Error::new(std::io::ErrorKind::Other, "not implemented")))
}
